class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """


        triplets = []
        # TODO: brute force -> tinker with sort/ O(nlogn)
        for m in range(0, len(nums)):
            for n in range(m+1, len(nums)):
                for o in range(n+1, len(nums)):
                    if nums[m] + nums[n] + nums[o] == 0:
                        arr1 = [nums[m],nums[n],nums[o]]
                        arr1.sort()
                        if arr1 not in triplets:
                            triplets.append(arr1)
        return triplets

time complexity O(n^3) and space complexity O(n)
TODO: revisit 
